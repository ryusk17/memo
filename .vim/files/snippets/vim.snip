snippet     if
abbr        if endif
prev_word   '^'
    if ${1:condition}
        ${0}
    endif

snippet elseif
prev_word   '^'
    else if ${1:/* condition */}
        ${0}

snippet     ifelse
abbr        if else endif
prev_word   '^'
    if ${1:condition}
        ${2}
    else
        ${3}  
    endif

snippet     for
abbr        for in endfor
prev_word   '^'
    for ${1:var} in ${2:list}
        ${0}
    endfor

snippet     while
abbr        while endwhile
prev_word   '^'
    while ${1:condition}
        ${0}
    endwhile

snippet     function
abbr        func endfunc
alias       func
prev_word   '^'
    function! ${1:func_name}(${2})
        ${0}
    endfunction

snippet     try
abbr        try endtry
prev_word   '^'
    try
        ${1}
    catch /${2:pattern}/
        ${3}
    endtry

snippet     log
prev_word   '^'
    echomsg string(${1})

snippet     l
prev_word   '^'
	let ${1} = ${2}

snippet     ar
	'${1}': ${2},


snippet unite-source
  let s:save_cpo = &cpo
  set cpo&vim

  "
  function! unite#sources#${1}#define()
    return s:source
  endfunction
  "
  let s:source = {
        \ 'name': '${2}',
        \ 'action_table'   : {},
        \ 'default_action' : {'common' : 'execute'},
        \ 'is_listed'      : 1,
        \ }

  " [{ 
  "   "word" : word,
  "   "abbr" : abbr,
  " }]
  function! s:source.gather_candidates(args, context)
  
  endfunction
  "
  let s:source.action_table.execute = {'description' : '${3}'}
  function! s:source.action_table.execute.func(candidate)

  endfunction

  let &cpo = s:save_cpo


